<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ProjectMapper">

	<!-- 프로젝트 카테고리별 목록 가져오기 -->
  <select id="ListCategory" resultType="ProjectVo">
	  <![CDATA[
		SELECT 
		    NO
		    , STATUS_NO
		    , STATUS AS STATUS_NAME
		    , IMAGE_URL
		    , CATEGORY_NO
		    , MAIN_CATEGORY_NO
		    , MAIN_CATEGORY
		    , SUB_CATEGORY_NO
		    , SUB_CATEGORY
		    , MEMBER_NO
		    , NAME AS MEMBER_NAME
		    , TITLE
		    , REGEXP_REPLACE(REVERSE(REGEXP_REPLACE(REVERSE(TO_CHAR(GOAL_AMOUNT)), '(\d{3})', '\1,')), '^,', '') AS "GOAL_AMOUNT"
		    , GOAL_AMOUNT AS GOAL_AMOUNT_NO
		    , REGEXP_REPLACE(REVERSE(REGEXP_REPLACE(REVERSE(TO_CHAR(CURRENT_AMOUNT)), '(\d{3})', '\1,')), '^,', '') AS "CURRENT_AMOUNT"
		    , CURRENT_AMOUNT AS CURRENT_AMOUNT_NO
		    , TO_CHAR(END_DATE, 'YYYY"년 "MM"월 "DD"일"') AS END_DATE
			]]>
		FROM (
		        SELECT 
		        P.NO
		        , P.IMAGE_URL
		        , P.CATEGORY_NO
		        , C.MAIN_CATEGORY_NO
		        , C.MAIN_CATEGORY
		        , C.SUB_CATEGORY
		        , C.SUB_CATEGORY_NO
		        , P.MEMBER_NO
		        , M.NAME
		        , P.TITLE
		        , P.END_DATE
		        , P.GOAL_AMOUNT
		        , P.CURRENT_AMOUNT
		        , P.STATUS_NO
		        , PS.STATUS
		    FROM (SELECT NO
		                , IMAGE_URL
		                , CATEGORY_NO
		                , MEMBER_NO
		                , TITLE
		                , END_DATE
		                , GOAL_AMOUNT
		                , CURRENT_AMOUNT
		                , STATUS_NO
		                FROM PROJECT
		                WHERE DELETE_YN = 'N'
		                	AND CATEGORY_NO = #{categoryNo}) P
		        JOIN MEMBER M ON P.MEMBER_NO = M.NO
		        JOIN CATEGORY C ON P.CATEGORY_NO = C.NO
		        JOIN PROJECT_STATUS PS ON P.STATUS_NO = PS.NO
	        <if test=" statusNo == null or statusNo == ''" >
		        WHERE 
		        P.STATUS_NO = 3 
		        OR P.STATUS_NO = 5 
		        OR P.STATUS_NO = 6 
		        OR P.STATUS_NO = 7
	        </if>
	        <if test=" statusNo != null and statusNo != '' " >
	        	WHERE P.STATUS_NO = #{statusNo}
	        </if>
		    )
		    <if test="(achievementRateStart != null and achievementRateStart != '') or (achievementRateEnd != null and achievementRateEnd != '')">
				WHERE 
				<trim prefixOverrides="AND">
					<if test="achievementRateStart != null and achievementRateStart != ''">
						<![CDATA[CURRENT_AMOUNT*100/GOAL_AMOUNT >= #{achievementRateStart}]]>
					</if>
					<if test="achievementRateEnd != null and achievementRateEnd != ''">
						<![CDATA[AND CURRENT_AMOUNT*100/GOAL_AMOUNT <= #{achievementRateEnd}]]>
					</if>
				</trim>
		    </if>
		    ORDER BY DECODE(STATUS_NO, 5, 1), STATUS_NO
  </select>
  
  <!-- 프로젝트 인기순 목록 가져오기 -->
  <select id="ListPopular" resultType="ProjectVo">
    <![CDATA[
	  SELECT 
		    NO
		    , STATUS_NO
		    , STATUS	AS STATUS_NAME
		    , IMAGE_URL
		    , CATEGORY_NO
		    , MAIN_CATEGORY_NO
		    , MAIN_CATEGORY
		    , SUB_CATEGORY_NO
		    , SUB_CATEGORY
		    , MEMBER_NO
		    , NAME AS MEMBER_NAME
		    , TITLE
		    , REGEXP_REPLACE(REVERSE(REGEXP_REPLACE(REVERSE(TO_CHAR(GOAL_AMOUNT)), '(\d{3})', '\1,')), '^,', '') AS "GOAL_AMOUNT"
		    , GOAL_AMOUNT AS GOAL_AMOUNT_NO
		    , REGEXP_REPLACE(REVERSE(REGEXP_REPLACE(REVERSE(TO_CHAR(CURRENT_AMOUNT)), '(\d{3})', '\1,')), '^,', '') AS "CURRENT_AMOUNT"
		    , CURRENT_AMOUNT AS CURRENT_AMOUNT_NO
		    , START_DATE
		    , TO_CHAR(END_DATE, 'YYYY"년 "MM"월 "DD"일"') AS END_DATE
		]]>
		FROM (
		        SELECT 
		        P.NO
		        , P.IMAGE_URL
		        , P.CATEGORY_NO
		        , C.MAIN_CATEGORY_NO
		        , C.MAIN_CATEGORY
		        , C.SUB_CATEGORY_NO
		        , C.SUB_CATEGORY
		        , P.MEMBER_NO
		        , M.NAME
		        , P.TITLE
		        , P.START_DATE
		        , P.END_DATE
		        , P.GOAL_AMOUNT
		        , P.CURRENT_AMOUNT
		        , P.STATUS_NO
		        , PS.STATUS
		    FROM (SELECT NO
		                , IMAGE_URL
		                , CATEGORY_NO
		                , MEMBER_NO
		                , TITLE
		                , START_DATE
		                , END_DATE
		                , GOAL_AMOUNT
		                , CURRENT_AMOUNT
		                , STATUS_NO
		                FROM PROJECT
		                WHERE DELETE_YN = 'N') P
		        JOIN MEMBER M ON P.MEMBER_NO = M.NO
		        JOIN CATEGORY C ON P.CATEGORY_NO = C.NO
		        JOIN PROJECT_STATUS PS ON P.STATUS_NO = PS.NO
		        WHERE 
		            P.STATUS_NO = 5
		    )
	    <if test="(achievementRateStart != null and achievementRateStart != '') or (achievementRateEnd != null and achievementRateEnd != '')">
			WHERE 
			<trim prefixOverrides="AND">
				<if test="achievementRateStart != null and achievementRateStart != ''">
					<![CDATA[CURRENT_AMOUNT*100/GOAL_AMOUNT >= #{achievementRateStart}]]>
				</if>
				<if test="achievementRateEnd != null and achievementRateEnd != ''">
					<![CDATA[AND CURRENT_AMOUNT*100/GOAL_AMOUNT <= #{achievementRateEnd}]]>
				</if>
			</trim>
	    </if>
		ORDER BY CURRENT_AMOUNT_NO/GOAL_AMOUNT_NO DESC
  </select>
  
  <!-- 프로젝트 최신순 목록 가져오기 -->
  <select id="ListNew" resultType="ProjectVo">
  <![CDATA[
	 SELECT 
	    NO
	    , STATUS_NO
	    , STATUS	AS STATUS_NAME
	    , IMAGE_URL
	    , CATEGORY_NO
	    , MAIN_CATEGORY_NO
	    , MAIN_CATEGORY
	    , SUB_CATEGORY_NO
	    , SUB_CATEGORY
	    , MEMBER_NO
	    , NAME AS MEMBER_NAME
	    , TITLE
	    , REGEXP_REPLACE(REVERSE(REGEXP_REPLACE(REVERSE(TO_CHAR(GOAL_AMOUNT)), '(\d{3})', '\1,')), '^,', '') AS "GOAL_AMOUNT"
	    , GOAL_AMOUNT AS GOAL_AMOUNT_NO
	    , REGEXP_REPLACE(REVERSE(REGEXP_REPLACE(REVERSE(TO_CHAR(CURRENT_AMOUNT)), '(\d{3})', '\1,')), '^,', '') AS "CURRENT_AMOUNT"
	    , CURRENT_AMOUNT AS CURRENT_AMOUNT_NO
	    , START_DATE
	    , TO_CHAR(END_DATE, 'YYYY"년 "MM"월 "DD"일"') AS END_DATE
	]]>
	FROM (
	        SELECT 
	        P.NO
	        , P.IMAGE_URL
	        , P.CATEGORY_NO
	        , C.MAIN_CATEGORY_NO
	        , C.MAIN_CATEGORY
	        , C.SUB_CATEGORY_NO
	        , C.SUB_CATEGORY
	        , P.MEMBER_NO
	        , M.NAME
	        , P.TITLE
	        , P.START_DATE
	        , P.END_DATE
	        , P.GOAL_AMOUNT
	        , P.CURRENT_AMOUNT
	        , P.STATUS_NO
	        , PS.STATUS
	    FROM (SELECT NO
	                , IMAGE_URL
	                , CATEGORY_NO
	                , MEMBER_NO
	                , TITLE
	                , START_DATE
	                , END_DATE
	                , GOAL_AMOUNT
	                , CURRENT_AMOUNT
	                , STATUS_NO
	                FROM PROJECT
	                WHERE DELETE_YN = 'N') P
	        JOIN MEMBER M ON P.MEMBER_NO = M.NO
	        JOIN CATEGORY C ON P.CATEGORY_NO = C.NO
	        JOIN PROJECT_STATUS PS ON P.STATUS_NO = PS.NO
	        WHERE 
	            P.STATUS_NO = 5
	    )
    <if test="(achievementRateStart != null and achievementRateStart != '') or (achievementRateEnd != null and achievementRateEnd != '')">
		WHERE 
		<trim prefixOverrides="AND">
			<if test="achievementRateStart != null and achievementRateStart != ''">
				<![CDATA[CURRENT_AMOUNT*100/GOAL_AMOUNT >= #{achievementRateStart}]]>
			</if>
			<if test="achievementRateEnd != null and achievementRateEnd != ''">
				<![CDATA[AND CURRENT_AMOUNT*100/GOAL_AMOUNT <= #{achievementRateEnd}]]>
			</if>
		</trim>
    </if>
	ORDER BY START_DATE DESC
  </select>
  
  <!-- 프로젝트 마감임박순 목록 가져오기 -->
  <select id="ListImminent" resultType="ProjectVo">
   <![CDATA[
	  SELECT 
		    NO
		    , STATUS_NO
		    , STATUS	AS STATUS_NAME
		    , IMAGE_URL
		    , CATEGORY_NO
		    , MAIN_CATEGORY_NO
		    , MAIN_CATEGORY
		    , SUB_CATEGORY_NO
		    , SUB_CATEGORY
		    , MEMBER_NO
		    , NAME AS MEMBER_NAME
		    , TITLE
		    , REGEXP_REPLACE(REVERSE(REGEXP_REPLACE(REVERSE(TO_CHAR(GOAL_AMOUNT)), '(\d{3})', '\1,')), '^,', '') AS "GOAL_AMOUNT"
		    , GOAL_AMOUNT AS GOAL_AMOUNT_NO
		    , REGEXP_REPLACE(REVERSE(REGEXP_REPLACE(REVERSE(TO_CHAR(CURRENT_AMOUNT)), '(\d{3})', '\1,')), '^,', '') AS "CURRENT_AMOUNT"
		    , CURRENT_AMOUNT AS CURRENT_AMOUNT_NO
		    , START_DATE
		    , TO_CHAR(END_DATE, 'YYYY"년 "MM"월 "DD"일"') AS END_DATE
		]]>
		FROM (
		        SELECT 
		        P.NO
		        , P.IMAGE_URL
		        , P.CATEGORY_NO
		        , C.MAIN_CATEGORY_NO
		        , C.MAIN_CATEGORY
		        , C.SUB_CATEGORY_NO
		        , C.SUB_CATEGORY
		        , P.MEMBER_NO
		        , M.NAME
		        , P.TITLE
		        , P.START_DATE
		        , P.END_DATE
		        , P.GOAL_AMOUNT
		        , P.CURRENT_AMOUNT
		        , P.STATUS_NO
		        , PS.STATUS
		    FROM (SELECT NO
		                , IMAGE_URL
		                , CATEGORY_NO
		                , MEMBER_NO
		                , TITLE
		                , START_DATE
		                , END_DATE
		                , GOAL_AMOUNT
		                , CURRENT_AMOUNT
		                , STATUS_NO
		                FROM PROJECT
		                WHERE DELETE_YN = 'N') P
		        JOIN MEMBER M ON P.MEMBER_NO = M.NO
		        JOIN CATEGORY C ON P.CATEGORY_NO = C.NO
		        JOIN PROJECT_STATUS PS ON P.STATUS_NO = PS.NO
		        WHERE 
		            P.STATUS_NO = 5
		    )
    <if test="(achievementRateStart != null and achievementRateStart != '') or (achievementRateEnd != null and achievementRateEnd != '')">
		WHERE 
		<trim prefixOverrides="AND">
			<if test="achievementRateStart != null and achievementRateStart != ''">
				<![CDATA[CURRENT_AMOUNT*100/GOAL_AMOUNT >= #{achievementRateStart}]]>
			</if>
			<if test="achievementRateEnd != null and achievementRateEnd != ''">
				<![CDATA[AND CURRENT_AMOUNT*100/GOAL_AMOUNT <= #{achievementRateEnd}]]>
			</if>
		</trim>
    </if>
	ORDER BY END_DATE
  </select>
  
  <!-- 프로젝트 오픈예정 목록 가져오기 -->
  <select id="ListPrelaunch" resultType="ProjectVo">
     <![CDATA[
	SELECT 
	    NO
	    , STATUS_NO
	    , STATUS	AS STATUS_NAME
	    , IMAGE_URL
	    , CATEGORY_NO
	    , MAIN_CATEGORY_NO
	    , MAIN_CATEGORY
	    , SUB_CATEGORY_NO
	    , SUB_CATEGORY
	    , MEMBER_NO
	    , NAME AS MEMBER_NAME
	    , TITLE
	    , REGEXP_REPLACE(REVERSE(REGEXP_REPLACE(REVERSE(TO_CHAR(GOAL_AMOUNT)), '(\d{3})', '\1,')), '^,', '') AS "GOAL_AMOUNT"
	    , GOAL_AMOUNT AS GOAL_AMOUNT_NO
	    , REGEXP_REPLACE(REVERSE(REGEXP_REPLACE(REVERSE(TO_CHAR(CURRENT_AMOUNT)), '(\d{3})', '\1,')), '^,', '') AS "CURRENT_AMOUNT"
	    , CURRENT_AMOUNT AS CURRENT_AMOUNT_NO
	    , START_DATE
	    , TO_CHAR(START_DATE, 'YYYY"년 "MM"월 "DD"일"') AS START_DATE_STR
	    , TO_CHAR(END_DATE, 'YYYY"년 "MM"월 "DD"일"') AS END_DATE
	]]>
	FROM (
	        SELECT 
	        P.NO
	        , P.IMAGE_URL
	        , P.CATEGORY_NO
	        , C.MAIN_CATEGORY_NO
	        , C.MAIN_CATEGORY
	        , C.SUB_CATEGORY_NO
	        , C.SUB_CATEGORY
	        , P.MEMBER_NO
	        , M.NAME
	        , P.TITLE
	        , P.START_DATE
	        , P.END_DATE
	        , P.GOAL_AMOUNT
	        , P.CURRENT_AMOUNT
	        , P.STATUS_NO
	        , PS.STATUS
	    FROM (SELECT NO
	                , IMAGE_URL
	                , CATEGORY_NO
	                , MEMBER_NO
	                , TITLE
	                , START_DATE
	                , END_DATE
	                , GOAL_AMOUNT
	                , CURRENT_AMOUNT
	                , STATUS_NO
	                FROM PROJECT
	                WHERE DELETE_YN = 'N') P
	        JOIN MEMBER M ON P.MEMBER_NO = M.NO
	        JOIN CATEGORY C ON P.CATEGORY_NO = C.NO
	        JOIN PROJECT_STATUS PS ON P.STATUS_NO = PS.NO
	        WHERE 
	            P.STATUS_NO = 3
	    )
	ORDER BY START_DATE
  </select>
  
  <!-- 프로젝트 상세 타이틀 -->
  <select id="DetailTitle" resultType="com.gamepound.app.project.vo.ProjectDetailVo">
	SELECT 
	  P.STATUS_NO
	  , PS.STATUS AS STATUS_NAME
	  , P.CATEGORY_NO
	  , C.MAIN_CATEGORY
	  , C.SUB_CATEGORY
	  , P.MEMBER_NO
	  , M.NAME AS MEMBER_NAME
	  , M.PIC AS MEMBER_PIC
	  , M.INTRO AS MEMBER_INTRO
	  , P.NO
	  , P.TITLE
	  , P.IMAGE_URL
	  , REGEXP_REPLACE(REVERSE(REGEXP_REPLACE(REVERSE(TO_CHAR(P.GOAL_AMOUNT)), '(\d{3})', '\1,')), '^,', '') AS "GOAL_AMOUNT"
	  , REGEXP_REPLACE(REVERSE(REGEXP_REPLACE(REVERSE(TO_CHAR(P.CURRENT_AMOUNT)), '(\d{3})', '\1,')), '^,', '') AS "CURRENT_AMOUNT"
	  , P.OK_DATE
	  , P.ENROLL_DATE
	  , TO_CHAR(P.START_DATE, 'YYYY"년 "MM"월 "DD"일"') AS START_DATE
	  , TO_CHAR(P.START_DATE, 'YYYY.MM.DD') AS START_DATE_STR
	  , TO_CHAR(P.END_DATE, 'YYYY"년 "MM"월 "DD"일"') AS END_DATE
	  , TO_CHAR(P.END_DATE, 'YYYY.MM.DD') AS END_DATE_STR
	  , TO_CHAR(P.CAL_DATE, 'YYYY.MM.DD') AS CAL_DATE
	  , P.OK_YN
	  , P.DELETE_YN
	FROM PROJECT P
	JOIN PROJECT_STATUS PS ON P.STATUS_NO = PS.NO
	JOIN CATEGORY C ON P.CATEGORY_NO = C.NO
	JOIN MEMBER M ON P.MEMBER_NO = M.NO
	WHERE P.OK_YN = 'Y'  
	  AND P.DELETE_YN = 'N'
	  AND P.NO = #{no}
  </select>
  
  <!-- 프로젝트 상세 리워드 -->
  <select id="DetailReward" resultType="com.gamepound.app.reward.vo.RewardVo">
	SELECT 
	  NO
	  , PROJECT_NO
	  , REGEXP_REPLACE(REVERSE(REGEXP_REPLACE(REVERSE(TO_CHAR(AMOUNT)), '(\d{3})', '\1,')), '^,', '') AS "AMOUNT"
	  , NAME
	FROM REWARD
	WHERE PROJECT_NO = #{no}
  </select>
  
  <!-- 프로젝트 상세 계획 -->
  <select id="DetailStory" resultType="com.gamepound.app.project.vo.ProjectStoryVo">
	SELECT 
	  TXT_DESCRIPTION
	  , TXT_BUDGET
	  , TXT_SCHEDULE
	  , TXT_TEAM
	  , TXT_ITEM
	FROM PROJECT
	WHERE DELETE_YN = 'N'
	    AND OK_YN = 'Y'
	    AND NO = #{no}
  </select>
  
  <!-- 프로젝트 상세 업데이트 -->
  <select id="DetailUpdate" resultType="com.gamepound.app.project.vo.ProjectUpdateVo">
	SELECT 
	  PU.NO
	  , PU.PROJECT_NO
	  , PU.CONTENT
	  , TO_CHAR(PU.ENROLL_DATE, 'YYYY"년 "MM"월 "DD"일"') AS ENROLL_DATE
	  , M.NAME AS MEMBER_NAME
	  , M.PIC AS MEMBER_PIC
	FROM PROJECT_UPDATE PU
	JOIN PROJECT P ON P.NO = PU.PROJECT_NO
	JOIN MEMBER M ON M.NO = P.MEMBER_NO
	WHERE PROJECT_NO = #{no}
  </select>
  
  <!-- 프로젝트 상세 커뮤니티 -->
  <select id="DetailCommunity" resultType="com.gamepound.app.project.vo.ProjectCommunityVo">
	SELECT 
	  C.NO
	  , C.PROJECT_NO
	  , C.MEMBER_NO
	  , M1.NAME AS MEMBER_NAME
	  , M1.PIC AS MEMBER_PIC
	  , C.CONTENT
	  , TO_CHAR(C.CONTENT_ENROLL_DATE, 'YYYY"년 "MM"월 "DD"일"') AS CONTENT_ENROLL_DATE
	  , M2.NO AS REPLYER_NO
	  , M2.NAME AS REPLYER_NAME
	  , M2.PIC AS REPLYER_PIC
	  , C.REPLY
	  , TO_CHAR(C.REPLY_ENROLL_DATE, 'YYYY"년 "MM"월 "DD"일"') AS REPLY_ENROLL_DATE
	FROM COMMUNITY C
	JOIN PROJECT P ON P.NO = C.PROJECT_NO
	JOIN MEMBER M1 ON C.MEMBER_NO = M1.NO
	JOIN MEMBER M2 ON P.MEMBER_NO = M2.NO
	WHERE C.PROJECT_NO = #{no}
  </select>
  
	<!-- 프로젝트 상세 업데이트 작성 -->
	<insert id="DetailUpdateInsert">
		INSERT INTO PROJECT_UPDATE(
		    NO
		    , PROJECT_NO
		    , CONTENT
		)VALUES(
		    SEQ_PROJECT_UPDATE_NO.NEXTVAL
		    , #{projectNo}
		    , #{content}
		)
	</insert>
  
  <!-- 프로젝트 상세 커뮤니티(댓글) 작성 -->
	<update id="DetailCommunityReplyInsert">
		UPDATE COMMUNITY
		    SET
		        REPLY = #{reply}
		        , REPLY_ENROLL_DATE = SYSDATE
		WHERE NO = #{no};
	</update>  

	<!-- 프로젝트 상세 커뮤니티 작성 -->
	<insert id="DetailCommunityInsert">
		INSERT INTO
		COMMUNITY(
		    NO
		    , PROJECT_NO
		    , MEMBER_NO
		    , CONTENT
		) VALUES(
		    SEQ_COMMUNITY_NO.NEXTVAL
		    , #{projectNo}
		    , #{memberNo}
		    , #{content}    
		)
	</insert>
	
	<select id="ProjectTotalBackerNo" resultType="com.gamepound.app.project.vo.ProjectDetailVo">
		SELECT 
		    COUNT(P.NO) AS TOTAL_BACKER_NO
		FROM PROJECT P
		JOIN PAYMENT PM ON P.NO = PM.PROJECT_NO
		WHERE P.NO = #{no}
		    AND PM.PAYMENT_STATUS_NO = 1
	</select>

	<!-- 프로젝트 상태 리스트 가져오기 -->
	<select id="getProjectStatus" resultType="com.gamepound.app.project.vo.ProjectStatusVo">
		SELECT NO, STATUS FROM PROJECT_STATUS
	</select>
</mapper>